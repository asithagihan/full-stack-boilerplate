type StepParameter {
  id: ID!
  key: String!
  value: String!
  steptemplateID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

enum Status {
  TODO
  INPROGRESS
  DONE
  WAITING
}

type StepTemplate {
  id: ID!
  order: Int!
  start_after: AWSDateTime!
  average_time: Int!
  status: Status!
  procedure: String
  description: String
  workordertemplateID: ID!
  StepParameters(
    filter: ModelStepParameterFilterInput
    sortDirection: ModelSortDirection
    limit: Int
    nextToken: String
  ): ModelStepParameterConnection
  createdBy: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type WorkOrderTemplate {
  id: ID!
  organisation: String!
  name: String!
  qty: Int!
  createdBy: String!
  StepTemplates(
    filter: ModelStepTemplateFilterInput
    sortDirection: ModelSortDirection
    limit: Int
    nextToken: String
  ): ModelStepTemplateConnection
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelStepParameterConnection @aws_api_key @aws_iam {
  items: [StepParameter]!
  nextToken: String
}

input ModelStepParameterFilterInput {
  id: ModelIDInput
  key: ModelStringInput
  value: ModelStringInput
  steptemplateID: ModelIDInput
  and: [ModelStepParameterFilterInput]
  or: [ModelStepParameterFilterInput]
  not: ModelStepParameterFilterInput
}

type Query {
  getStepParameter(id: ID!): StepParameter
  listStepParameters(
    filter: ModelStepParameterFilterInput
    limit: Int
    nextToken: String
  ): ModelStepParameterConnection
  stepParametersBySteptemplateID(
    steptemplateID: ID!
    sortDirection: ModelSortDirection
    filter: ModelStepParameterFilterInput
    limit: Int
    nextToken: String
  ): ModelStepParameterConnection
  getStepTemplate(id: ID!): StepTemplate
  listStepTemplates(
    filter: ModelStepTemplateFilterInput
    limit: Int
    nextToken: String
  ): ModelStepTemplateConnection
  stepTemplatesByWorkordertemplateID(
    workordertemplateID: ID!
    sortDirection: ModelSortDirection
    filter: ModelStepTemplateFilterInput
    limit: Int
    nextToken: String
  ): ModelStepTemplateConnection
  getWorkOrderTemplate(id: ID!): WorkOrderTemplate
  listWorkOrderTemplates(
    filter: ModelWorkOrderTemplateFilterInput
    limit: Int
    nextToken: String
  ): ModelWorkOrderTemplateConnection
}

input ModelStepParameterConditionInput {
  key: ModelStringInput
  value: ModelStringInput
  steptemplateID: ModelIDInput
  and: [ModelStepParameterConditionInput]
  or: [ModelStepParameterConditionInput]
  not: ModelStepParameterConditionInput
}

input CreateStepParameterInput {
  id: ID
  key: String!
  value: String!
  steptemplateID: ID!
}

input UpdateStepParameterInput {
  id: ID!
  key: String
  value: String
  steptemplateID: ID
}

input DeleteStepParameterInput {
  id: ID!
}

type Mutation {
  createStepParameter(
    input: CreateStepParameterInput!
    condition: ModelStepParameterConditionInput
  ): StepParameter
  updateStepParameter(
    input: UpdateStepParameterInput!
    condition: ModelStepParameterConditionInput
  ): StepParameter
  deleteStepParameter(
    input: DeleteStepParameterInput!
    condition: ModelStepParameterConditionInput
  ): StepParameter
  createStepTemplate(
    input: CreateStepTemplateInput!
    condition: ModelStepTemplateConditionInput
  ): StepTemplate
  updateStepTemplate(
    input: UpdateStepTemplateInput!
    condition: ModelStepTemplateConditionInput
  ): StepTemplate
  deleteStepTemplate(
    input: DeleteStepTemplateInput!
    condition: ModelStepTemplateConditionInput
  ): StepTemplate
  createWorkOrderTemplate(
    input: CreateWorkOrderTemplateInput!
    condition: ModelWorkOrderTemplateConditionInput
  ): WorkOrderTemplate
  updateWorkOrderTemplate(
    input: UpdateWorkOrderTemplateInput!
    condition: ModelWorkOrderTemplateConditionInput
  ): WorkOrderTemplate
  deleteWorkOrderTemplate(
    input: DeleteWorkOrderTemplateInput!
    condition: ModelWorkOrderTemplateConditionInput
  ): WorkOrderTemplate
}

input ModelSubscriptionStepParameterFilterInput {
  id: ModelSubscriptionIDInput
  key: ModelSubscriptionStringInput
  value: ModelSubscriptionStringInput
  steptemplateID: ModelSubscriptionIDInput
  and: [ModelSubscriptionStepParameterFilterInput]
  or: [ModelSubscriptionStepParameterFilterInput]
}

type Subscription {
  onCreateStepParameter(
    filter: ModelSubscriptionStepParameterFilterInput
  ): StepParameter @aws_subscribe(mutations: ["createStepParameter"])
  onUpdateStepParameter(
    filter: ModelSubscriptionStepParameterFilterInput
  ): StepParameter @aws_subscribe(mutations: ["updateStepParameter"])
  onDeleteStepParameter(
    filter: ModelSubscriptionStepParameterFilterInput
  ): StepParameter @aws_subscribe(mutations: ["deleteStepParameter"])
  onCreateStepTemplate(
    filter: ModelSubscriptionStepTemplateFilterInput
  ): StepTemplate @aws_subscribe(mutations: ["createStepTemplate"])
  onUpdateStepTemplate(
    filter: ModelSubscriptionStepTemplateFilterInput
  ): StepTemplate @aws_subscribe(mutations: ["updateStepTemplate"])
  onDeleteStepTemplate(
    filter: ModelSubscriptionStepTemplateFilterInput
  ): StepTemplate @aws_subscribe(mutations: ["deleteStepTemplate"])
  onCreateWorkOrderTemplate(
    filter: ModelSubscriptionWorkOrderTemplateFilterInput
  ): WorkOrderTemplate @aws_subscribe(mutations: ["createWorkOrderTemplate"])
  onUpdateWorkOrderTemplate(
    filter: ModelSubscriptionWorkOrderTemplateFilterInput
  ): WorkOrderTemplate @aws_subscribe(mutations: ["updateWorkOrderTemplate"])
  onDeleteWorkOrderTemplate(
    filter: ModelSubscriptionWorkOrderTemplateFilterInput
  ): WorkOrderTemplate @aws_subscribe(mutations: ["deleteWorkOrderTemplate"])
}

type ModelStepTemplateConnection {
  items: [StepTemplate]!
  nextToken: String
}

input ModelStatusInput {
  eq: Status
  ne: Status
}

input ModelStepTemplateFilterInput {
  id: ModelIDInput
  order: ModelIntInput
  start_after: ModelStringInput
  average_time: ModelIntInput
  status: ModelStatusInput
  procedure: ModelStringInput
  description: ModelStringInput
  workordertemplateID: ModelIDInput
  createdBy: ModelStringInput
  and: [ModelStepTemplateFilterInput]
  or: [ModelStepTemplateFilterInput]
  not: ModelStepTemplateFilterInput
}

input ModelStepTemplateConditionInput {
  order: ModelIntInput
  start_after: ModelStringInput
  average_time: ModelIntInput
  status: ModelStatusInput
  procedure: ModelStringInput
  description: ModelStringInput
  workordertemplateID: ModelIDInput
  createdBy: ModelStringInput
  and: [ModelStepTemplateConditionInput]
  or: [ModelStepTemplateConditionInput]
  not: ModelStepTemplateConditionInput
}

input CreateStepTemplateInput {
  id: ID
  order: Int!
  start_after: AWSDateTime!
  average_time: Int!
  status: Status!
  procedure: String
  description: String
  workordertemplateID: ID!
  createdBy: String!
}

input UpdateStepTemplateInput {
  id: ID!
  order: Int
  start_after: AWSDateTime
  average_time: Int
  status: Status
  procedure: String
  description: String
  workordertemplateID: ID
  createdBy: String
}

input DeleteStepTemplateInput {
  id: ID!
}

input ModelSubscriptionStepTemplateFilterInput {
  id: ModelSubscriptionIDInput
  order: ModelSubscriptionIntInput
  start_after: ModelSubscriptionStringInput
  average_time: ModelSubscriptionIntInput
  status: ModelSubscriptionStringInput
  procedure: ModelSubscriptionStringInput
  description: ModelSubscriptionStringInput
  workordertemplateID: ModelSubscriptionIDInput
  createdBy: ModelSubscriptionStringInput
  and: [ModelSubscriptionStepTemplateFilterInput]
  or: [ModelSubscriptionStepTemplateFilterInput]
}

type ModelWorkOrderTemplateConnection {
  items: [WorkOrderTemplate]!
  nextToken: String
}

input ModelWorkOrderTemplateFilterInput {
  id: ModelIDInput
  organisation: ModelStringInput
  name: ModelStringInput
  qty: ModelIntInput
  createdBy: ModelStringInput
  and: [ModelWorkOrderTemplateFilterInput]
  or: [ModelWorkOrderTemplateFilterInput]
  not: ModelWorkOrderTemplateFilterInput
}

input ModelWorkOrderTemplateConditionInput {
  organisation: ModelStringInput
  name: ModelStringInput
  qty: ModelIntInput
  createdBy: ModelStringInput
  and: [ModelWorkOrderTemplateConditionInput]
  or: [ModelWorkOrderTemplateConditionInput]
  not: ModelWorkOrderTemplateConditionInput
}

input CreateWorkOrderTemplateInput {
  id: ID
  organisation: String!
  name: String!
  qty: Int!
  createdBy: String!
}

input UpdateWorkOrderTemplateInput {
  id: ID!
  organisation: String
  name: String
  qty: Int
  createdBy: String
}

input DeleteWorkOrderTemplateInput {
  id: ID!
}

input ModelSubscriptionWorkOrderTemplateFilterInput {
  id: ModelSubscriptionIDInput
  organisation: ModelSubscriptionStringInput
  name: ModelSubscriptionStringInput
  qty: ModelSubscriptionIntInput
  createdBy: ModelSubscriptionStringInput
  and: [ModelSubscriptionWorkOrderTemplateFilterInput]
  or: [ModelSubscriptionWorkOrderTemplateFilterInput]
}
